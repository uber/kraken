// Code generated by MockGen. DO NOT EDIT.
// Source: code.uber.internal/infra/kraken/origin/client (interfaces: BlobTransferer)

// Package mockclient is a generated GoMock package.
package mockclient

import (
	image "code.uber.internal/infra/kraken/lib/dockerregistry/image"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBlobTransferer is a mock of BlobTransferer interface
type MockBlobTransferer struct {
	ctrl     *gomock.Controller
	recorder *MockBlobTransfererMockRecorder
}

// MockBlobTransfererMockRecorder is the mock recorder for MockBlobTransferer
type MockBlobTransfererMockRecorder struct {
	mock *MockBlobTransferer
}

// NewMockBlobTransferer creates a new mock instance
func NewMockBlobTransferer(ctrl *gomock.Controller) *MockBlobTransferer {
	mock := &MockBlobTransferer{ctrl: ctrl}
	mock.recorder = &MockBlobTransfererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBlobTransferer) EXPECT() *MockBlobTransfererMockRecorder {
	return m.recorder
}

// CheckBlobExists mocks base method
func (m *MockBlobTransferer) CheckBlobExists(arg0 image.Digest) (bool, error) {
	ret := m.ctrl.Call(m, "CheckBlobExists", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckBlobExists indicates an expected call of CheckBlobExists
func (mr *MockBlobTransfererMockRecorder) CheckBlobExists(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckBlobExists", reflect.TypeOf((*MockBlobTransferer)(nil).CheckBlobExists), arg0)
}

// PullBlob mocks base method
func (m *MockBlobTransferer) PullBlob(arg0 image.Digest) error {
	ret := m.ctrl.Call(m, "PullBlob", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PullBlob indicates an expected call of PullBlob
func (mr *MockBlobTransfererMockRecorder) PullBlob(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullBlob", reflect.TypeOf((*MockBlobTransferer)(nil).PullBlob), arg0)
}

// PushBlob mocks base method
func (m *MockBlobTransferer) PushBlob(arg0 image.Digest) error {
	ret := m.ctrl.Call(m, "PushBlob", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PushBlob indicates an expected call of PushBlob
func (mr *MockBlobTransfererMockRecorder) PushBlob(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushBlob", reflect.TypeOf((*MockBlobTransferer)(nil).PushBlob), arg0)
}
