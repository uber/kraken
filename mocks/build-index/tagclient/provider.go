// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uber/kraken/build-index/tagclient (interfaces: Provider)

// Package mocktagclient is a generated GoMock package.
package mocktagclient

import (
	gomock "github.com/golang/mock/gomock"
	tagclient "github.com/uber/kraken/build-index/tagclient"
	reflect "reflect"
)

// MockProvider is a mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// Provide mocks base method
func (m *MockProvider) Provide(arg0 string) tagclient.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Provide", arg0)
	ret0, _ := ret[0].(tagclient.Client)
	return ret0
}

// Provide indicates an expected call of Provide
func (mr *MockProviderMockRecorder) Provide(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Provide", reflect.TypeOf((*MockProvider)(nil).Provide), arg0)
}
